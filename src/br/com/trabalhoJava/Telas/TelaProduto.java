/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.com.trabalhoJava.Telas;

/**
 *
 * @author Vinicius
 */
import java.sql.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import br.com.trabalhoJava.ClassesBeans.Produtos;
import br.com.trabalhoJava.DAO.ProdutoDao;
import javax.swing.table.TableRowSorter;
import javax.swing.table.DefaultTableModel;

public class TelaProduto extends javax.swing.JInternalFrame {

    /**
     * Creates new form TelaProduto
     *
     * @throws java.sql.SQLException
     */
    public TelaProduto() throws SQLException {
        initComponents();
        //Criando um modelo de Tabela
        DefaultTableModel modelo = (DefaultTableModel) tblProduto.getModel();
        //Ordenando a tabela
        tblProduto.setRowSorter(new TableRowSorter(modelo));
        //Prenchendo a tabela logo ao abrir a tela
        preencherTabela();

    }

    //O codigo abaixo adiciona linhas a tabela tblProduto
    public void preencherTabela() throws SQLException {
        //criando um modelo padrão de jtable
        DefaultTableModel modelo = (DefaultTableModel) tblProduto.getModel();
        //O medelo recebe 0 linhas
        modelo.setNumRows(0);
        //Instanciando a classe ProdutoDao
        ProdutoDao pdao = new ProdutoDao();
        //laço de repeição para adicionar as linhas da tabela
        for (Produtos p : pdao.ler()) {
            modelo.addRow(new Object[]{
                p.getIdProd(),
                p.getCategoria(),
                p.getNome(),
                p.getPreco()

            });
        }

    }

    //O codigo abaixo preenche a tabela com os dados da pesquisa
    public void preencherTabelaPesquisa(String pesq) throws SQLException {
        //criando um modelo padrão de jtable
        DefaultTableModel modelo = (DefaultTableModel) tblProduto.getModel();
        //O medelo recebe 0 linhas
        modelo.setNumRows(0);
        //Instanciando a classe ProdutoDao
        ProdutoDao pdao = new ProdutoDao();
        //laço de repetição para adicionar as linhas da tabela com os atributos
        //do selecionados do metodo ler perquisa
        for (Produtos p : pdao.lerpesquisa(pesq)) {
            modelo.addRow(new Object[]{
                p.getIdProd(),
                p.getCategoria(),
                p.getNome(),
                p.getPreco()

            });
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtProdNome = new javax.swing.JTextField();
        txtProdPreco = new javax.swing.JTextField();
        btnProdAdd = new javax.swing.JButton();
        btnProdRemove = new javax.swing.JButton();
        btnProdAlter = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblProduto = new javax.swing.JTable();
        txtCadPesqProd = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        lblIdProd = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        cboCadProdCategoria = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTable1);

        setClosable(true);
        setIconifiable(true);
        setTitle("Cadastro Produto");
        setPreferredSize(new java.awt.Dimension(640, 480));
        getContentPane().setLayout(null);

        jLabel1.setBackground(new java.awt.Color(0, 0, 0));
        jLabel1.setFont(new java.awt.Font("Arial Black", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Nome");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(70, 70, 60, 25);

        jLabel2.setBackground(new java.awt.Color(0, 0, 0));
        jLabel2.setFont(new java.awt.Font("Arial Black", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Categoria");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(70, 100, 90, 25);

        jLabel3.setBackground(new java.awt.Color(0, 0, 0));
        jLabel3.setFont(new java.awt.Font("Arial Black", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Preço");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(70, 140, 60, 25);
        getContentPane().add(txtProdNome);
        txtProdNome.setBounds(161, 67, 310, 29);
        getContentPane().add(txtProdPreco);
        txtProdPreco.setBounds(161, 137, 70, 29);

        btnProdAdd.setText("Adicionar");
        btnProdAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnProdAddActionPerformed(evt);
            }
        });
        getContentPane().add(btnProdAdd);
        btnProdAdd.setBounds(160, 190, 80, 40);
        btnProdAdd.getAccessibleContext().setAccessibleName("Add");

        btnProdRemove.setText("Remover");
        btnProdRemove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnProdRemoveActionPerformed(evt);
            }
        });
        getContentPane().add(btnProdRemove);
        btnProdRemove.setBounds(260, 190, 80, 40);

        btnProdAlter.setText("Alterar");
        btnProdAlter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnProdAlterActionPerformed(evt);
            }
        });
        getContentPane().add(btnProdAlter);
        btnProdAlter.setBounds(360, 190, 80, 40);

        tblProduto.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "idProd", "Categoria", "Nome", "Preço"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblProduto.getTableHeader().setReorderingAllowed(false);
        tblProduto.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblProdutoMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(tblProduto);
        if (tblProduto.getColumnModel().getColumnCount() > 0) {
            tblProduto.getColumnModel().getColumn(0).setResizable(false);
            tblProduto.getColumnModel().getColumn(0).setPreferredWidth(3);
            tblProduto.getColumnModel().getColumn(1).setResizable(false);
            tblProduto.getColumnModel().getColumn(1).setPreferredWidth(10);
            tblProduto.getColumnModel().getColumn(2).setResizable(false);
            tblProduto.getColumnModel().getColumn(3).setResizable(false);
            tblProduto.getColumnModel().getColumn(3).setPreferredWidth(3);
        }

        getContentPane().add(jScrollPane3);
        jScrollPane3.setBounds(80, 330, 430, 91);

        txtCadPesqProd.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtCadPesqProdKeyReleased(evt);
            }
        });
        getContentPane().add(txtCadPesqProd);
        txtCadPesqProd.setBounds(260, 270, 240, 33);

        jLabel4.setFont(new java.awt.Font("Arial Black", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Pesquisar por item:");
        getContentPane().add(jLabel4);
        jLabel4.setBounds(70, 270, 190, 30);

        lblIdProd.setBackground(new java.awt.Color(255, 255, 255));
        lblIdProd.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        lblIdProd.setForeground(new java.awt.Color(255, 255, 255));
        lblIdProd.setText("     ");
        lblIdProd.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        getContentPane().add(lblIdProd);
        lblIdProd.setBounds(540, 30, 30, 25);

        jLabel5.setBackground(new java.awt.Color(0, 0, 0));
        jLabel5.setFont(new java.awt.Font("Arial Black", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("ID");
        getContentPane().add(jLabel5);
        jLabel5.setBounds(500, 30, 30, 25);

        cboCadProdCategoria.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Comida", "Bebida" }));
        getContentPane().add(cboCadProdCategoria);
        cboCadProdCategoria.setBounds(160, 100, 110, 30);

        jLabel6.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/trabalhoJava/Icones/mad_wood-483965_640 (1).jpg"))); // NOI18N
        getContentPane().add(jLabel6);
        jLabel6.setBounds(0, 0, 620, 450);

        getAccessibleContext().setAccessibleName("Produto");

        setBounds(0, 0, 640, 480);
    }// </editor-fold>//GEN-END:initComponents
    //Evento para adicionar produto
    private void btnProdAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnProdAddActionPerformed
        // TODO add your handling code here:
        //Condição para validar que os campos não fiquem em branco
        if (txtProdNome.getText().isEmpty() || cboCadProdCategoria.getSelectedItem().toString().isEmpty()
                || txtProdPreco.getText().isEmpty()) {
            //Aviso de campo não informado
            JOptionPane.showMessageDialog(null, "CAMPO OBRIGATORIO NAO INFORMADO!");
        } else {
            try {
                //Instanciando as classes para usar os seus atributos e metodos
                Produtos p = new Produtos();
                ProdutoDao dao = new ProdutoDao();
                //Recebendo o conteudo dos campos e colocando nas variavéis
                p.setNome(txtProdNome.getText());
                //Usando um casting explicito para converter um Object em String
                p.setCategoria((String) cboCadProdCategoria.getSelectedItem());
                p.setPreco(Float.parseFloat(txtProdPreco.getText()));
                //Chamando metodo e enviando paramentos recebidos
                dao.adicionar(p);
                //Chamando metodo para atualizar tabela
                preencherTabela();
                //Limpando os campos 
                txtProdNome.setText("");
                cboCadProdCategoria.setSelectedItem("");
                txtProdPreco.setText("");

            } catch (SQLException ex) {
                Logger.getLogger(TelaProduto.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_btnProdAddActionPerformed
    //Evento para remover produto
    private void btnProdRemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnProdRemoveActionPerformed
        // TODO add your handling code here:
        //Condição para validar que a tebela tenha linha preenchida
        if (tblProduto.getSelectedRow() != -1) {

            try {
                //Instanciando as classes para usar os seus atributos e metodos
                Produtos p = new Produtos();
                ProdutoDao dao = new ProdutoDao();
                //Recebendo o Id do produto na tabela referente a linha 
                //e usando um casting explicito para converter em inteiro
                p.setIdProd((int) tblProduto.getValueAt(tblProduto.getSelectedRow(), 0));
                //Chamando o metodo delete da classe ProdutoDao
                dao.delete(p);
                //Atualizando a Tabela de produtos
                preencherTabela();
                //Limpando campos
                txtProdNome.setText("");
                cboCadProdCategoria.setSelectedItem("");
                txtProdPreco.setText("");

            } catch (SQLException ex) {
                //
                Logger.getLogger(TelaProduto.class.getName()).log(Level.SEVERE, null, ex);
            }

        } else {
            //Aviso para setar um produto
            JOptionPane.showMessageDialog(null, "Selecione um produto para excluir.");
        }


    }//GEN-LAST:event_btnProdRemoveActionPerformed
    //Evento para alterar produto
    private void btnProdAlterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnProdAlterActionPerformed
        // TODO add your handling code here:
        //Condição para validar que a tebela tenha linha preenchida
        if (tblProduto.getSelectedRow() != -1) {
            //Condição para validar que os campos não fiquem em branco
            if (txtProdNome.getText().isEmpty() || cboCadProdCategoria.getSelectedItem().toString().isEmpty()
                    || txtProdPreco.getText().isEmpty()) {
                //Aviso de campo Não informado
                JOptionPane.showMessageDialog(null, "CAMPO OBRIGATORIO NAO INFORMADO!");
            } else {

                try {
                    //Instanciando as classes para usar os seus atributos e metodos
                    Produtos p = new Produtos();
                    ProdutoDao dao = new ProdutoDao();
                    //Recebendo o conteudo dos campos e Label de Id e usando casnting explicito
                    p.setIdProd(Integer.parseInt(lblIdProd.getText()));
                    p.setCategoria((String) cboCadProdCategoria.getSelectedItem());
                    p.setNome(txtProdNome.getText());
                    p.setPreco(Float.parseFloat(txtProdPreco.getText()));
                    dao.alterar(p);
                    //atualizando a tabela de produto
                    preencherTabela();
                    //Limpando os campos
                    txtProdNome.setText("");
                    cboCadProdCategoria.setSelectedItem("");
                    txtProdPreco.setText("");
                    lblIdProd.setText("");

                } catch (SQLException ex) {
                    Logger.getLogger(TelaProduto.class.getName()).log(Level.SEVERE, null, ex);
                }
            }

        } else {
            //Aviso para setar um produto
            JOptionPane.showMessageDialog(null, "Selecione um produto para alterar.");
        }
    }//GEN-LAST:event_btnProdAlterActionPerformed
    //Evento para pesquisar produto
    private void txtCadPesqProdKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCadPesqProdKeyReleased

        try {
            // TODO add your handling code here:
            // Chamando metodo para pesquisar atributos pelo conteudo digitado na caixa de texto
            preencherTabelaPesquisa(txtCadPesqProd.getText());
        } catch (SQLException ex) {
            Logger.getLogger(TelaProduto.class.getName()).log(Level.SEVERE, null, ex);
        }


    }//GEN-LAST:event_txtCadPesqProdKeyReleased
    //Evento para setar campos
    private void tblProdutoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblProdutoMouseClicked
        // TODO add your handling code here:
        
    
        //Variavél para receber o numero inteiro referente a linha da tabela
        int setar = tblProduto.getSelectedRow();
        //Preenchendo os componentes(Labels, jTexfields e jComboBox) com o conteudo da linha setada
        lblIdProd.setText(tblProduto.getModel().getValueAt(setar, 0).toString());
        cboCadProdCategoria.setSelectedItem(tblProduto.getModel().getValueAt(setar, 1).toString());
        txtProdNome.setText(tblProduto.getModel().getValueAt(setar, 2).toString());
        txtProdPreco.setText(tblProduto.getModel().getValueAt(setar, 3).toString());
    
    }//GEN-LAST:event_tblProdutoMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnProdAdd;
    private javax.swing.JButton btnProdAlter;
    private javax.swing.JButton btnProdRemove;
    private javax.swing.JComboBox<String> cboCadProdCategoria;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel lblIdProd;
    private javax.swing.JTable tblProduto;
    private javax.swing.JTextField txtCadPesqProd;
    private javax.swing.JTextField txtProdNome;
    private javax.swing.JTextField txtProdPreco;
    // End of variables declaration//GEN-END:variables
}
